C:\Users\Tibi\python-django-models-authentication\envdjangomodels

envdjangomodels\Scripts\activate.bat



Verify Local Environment
(Ensure you first install python3 and pip per your OS instructions. See the previous section.)

Install django and other requirements on Windows
Open a command prompt or powershell and run the following commands, replacing 'project-root' with the path to the root folder of the Project.

> cd 'project-root'
> python -m venv venv
> venv\Scripts\activate.bat
> pip install -r requirements.txt
Install django and other requirements on macOS
Open a terminal and run the following commands, replacing 'project-root' with the path to the root folder of the Project.

$ cd 'project-root'
$ python3 -m venv venv
$ source venv/bin/activate
$ pip install -r requirements.txt
Note: If you've installed Python 3 using a method other than Homebrew, you might need to type python in the second command instead of python3.

Verify Setup
To run tests for the first module, make sure your venv is activated, then run python manage.py test module2/. Initially all of your tests should fail. As you start to complete tasks in the project, the tests will pass.

Previewing Your Work
Verify that you can run your app by running: python manage.py runserver. Then go to localhost:8000.
Note: You will see the below warning that you have unapplied migrations:

You have 19 unapplied migration(s). Your project may not work properly until you apply the
 migrations
for app(s): admin, auth, contenttypes, mainapp, sessions.
Run 'python manage.py migrate' to apply them.
Ignore this warning for now. You do NOT want to add migrations before you add a User model.



==================================================================================

Microsoft Windows [Version 10.0.19045.2486]
(c) Microsoft Corporation. All rights reserved.

C:\Users\Tibi>cd C:\Users\Tibi\python-django-models-authentication

C:\Users\Tibi\python-django-models-authentication>python manage.py test module2/
System check identified no issues (0 silenced).

Running tests...
----------------------------------------------------------------------
FFFFFFFFFF
======================================================================
FAIL [0.016s]: test_task10_make_migrations (tests.UsersTestCase.test_task10_make_migrations)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\Tibi\python-django-models-authentication\module2\tests.py", line 181, in test_task10_make_migrations
    self.assertTrue(os.path.isdir('users/migrations/'), msg=msg)
  File "C:\Users\Tibi\python-django-models-authentication\support\SimplerTestCase.py", line 12, in assertTrue
    self.fail(msg or (str(expr) + "is not True"))
AssertionError: Did you use `manage.py makemigrations` to create the `users` migrations file? Don't forget to `add` it to the git repo.

======================================================================
FAIL [0.000s]: test_task1_createapp (tests.UsersTestCase.test_task1_createapp)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\Tibi\python-django-models-authentication\module2\tests.py", line 9, in test_task1_createapp
    self.assertTrue(os.path.isdir('users'), msg=msg)
  File "C:\Users\Tibi\python-django-models-authentication\support\SimplerTestCase.py", line 12, in assertTrue
    self.fail(msg or (str(expr) + "is not True"))
AssertionError: Did you use `manage.py createapp` to start the `users` app?

======================================================================
FAIL [0.000s]: test_task2_add_settings (tests.UsersTestCase.test_task2_add_settings)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\Tibi\python-django-models-authentication\module2\tests.py", line 16, in test_task2_add_settings
    self.assertTrue('users' in settings.INSTALLED_APPS, msg="Check if users app is in INSTALLED_APPS")
  File "C:\Users\Tibi\python-django-models-authentication\support\SimplerTestCase.py", line 12, in assertTrue
    self.fail(msg or (str(expr) + "is not True"))
AssertionError: Check if users app is in INSTALLED_APPS

======================================================================
FAIL [0.000s]: test_task3_add_template (tests.UsersTestCase.test_task3_add_template)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\Tibi\python-django-models-authentication\module2\tests.py", line 19, in test_task3_add_template
    self.assertTrue(os.path.isdir('users/templates'), msg="Did you create the `templates` directory in `users`?")
  File "C:\Users\Tibi\python-django-models-authentication\support\SimplerTestCase.py", line 12, in assertTrue
    self.fail(msg or (str(expr) + "is not True"))
AssertionError: Did you create the `templates` directory in `users`?

======================================================================
FAIL [0.000s]: test_task4_create_model (tests.UsersTestCase.test_task4_create_model)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\Tibi\python-django-models-authentication\module2\tests.py", line 36, in test_task4_create_model
    self.assertTrue(import_found, msg="Did you import `AbstractUser`?")
  File "C:\Users\Tibi\python-django-models-authentication\support\SimplerTestCase.py", line 12, in assertTrue
    self.fail(msg or (str(expr) + "is not True"))
AssertionError: Did you import `AbstractUser`?

======================================================================
FAIL [0.016s]: test_task5_register_admin (tests.UsersTestCase.test_task5_register_admin)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\Tibi\python-django-models-authentication\module2\tests.py", line 69, in test_task5_register_admin
    self.assertTrue(import_user_admin_found, msg="Did you import `UserAdmin`?")
  File "C:\Users\Tibi\python-django-models-authentication\support\SimplerTestCase.py", line 12, in assertTrue
    self.fail(msg or (str(expr) + "is not True"))
AssertionError: Did you import `UserAdmin`?

======================================================================
FAIL [0.000s]: test_task6_add_settings (tests.UsersTestCase.test_task6_add_settings)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\Tibi\python-django-models-authentication\module2\tests.py", line 74, in test_task6_add_settings
    self.assertEqual(settings.LOGIN_URL, 'login', msg="Check if you set `LOGIN_URL` in `settings.py`.")
AssertionError: '/accounts/login/' != 'login'
- /accounts/login/
+ login
 : Check if you set `LOGIN_URL` in `settings.py`.

======================================================================
FAIL [0.000s]: test_task7_setup_urls (tests.UsersTestCase.test_task7_setup_urls)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\Tibi\python-django-models-authentication\module2\tests.py", line 107, in test_task7_setup_urls
    self.assertTrue(auth_views_import_found, 'Did you import `auth_views`?')
  File "C:\Users\Tibi\python-django-models-authentication\support\SimplerTestCase.py", line 12, in assertTrue
    self.fail(msg or (str(expr) + "is not True"))
AssertionError: Did you import `auth_views`?

======================================================================
FAIL [0.000s]: test_task8_redirect_routes (tests.UsersTestCase.test_task8_redirect_routes)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\Tibi\python-django-models-authentication\module2\tests.py", line 167, in test_task8_redirect_routes
    self.assertTrue(users_path_found,  "Did you `include` the users project URLS? in `blogproj/urls.py`?")
  File "C:\Users\Tibi\python-django-models-authentication\support\SimplerTestCase.py", line 12, in assertTrue
    self.fail(msg or (str(expr) + "is not True"))
AssertionError: Did you `include` the users project URLS? in `blogproj/urls.py`?

======================================================================
FAIL [0.016s]: test_task9_update_site_templates (tests.UsersTestCase.test_task9_update_site_templates)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\Tibi\python-django-models-authentication\module2\tests.py", line 176, in test_task9_update_site_templates
    self.assertTrue(not comment_found, msg="There is still a `{% comment %}` tag in `" + filename + "`")
  File "C:\Users\Tibi\python-django-models-authentication\support\SimplerTestCase.py", line 12, in assertTrue
    self.fail(msg or (str(expr) + "is not True"))
AssertionError: There is still a `{% comment %}` tag in `templates/base.html`

----------------------------------------------------------------------
Ran 10 tests in 0.047s

FAILED (failures=10)

Generating XML reports...

C:\Users\Tibi\python-django-models-authentication>

==============================================================


From the project's root directory, run python manage.py test module2/

Note that passing tests will not generate any output.

1
Create user app

Weâ€™re going to create a separate user app within our project. Run the following command to do that:
python manage.py startapp users

2
Include the new app

In the blogproj/ directory, inside of settings.py, find the INSTALLED_APPS list and 
after 'mainapp', add 'users'.

3
Add login template

We went ahead and created a basic login template for you to copy. 
First, create a folder inside the users/ directory called templates. 
Then, from the support/ directory, move the login.html file into the users/templates/ directory.

4
Create custom user model

Now we want to create our User model in users/models.py. To create a User class that derives from AbstractUser do the following: Add an import of AbstractUser from django.contrib.auth.models in the import section. Create the class User and derive from AbstractUser like so --

class User(AbstractUser):

Leave the class definition empty with pass, the base class has all we need for now.

5
Add user model to the admin site

In order to have access to this model in the admin, we need to register it in users/admin.py. Letâ€™s do the following: In the import section, add an import of UserAdmin from django.contrib.auth.admin and import User from .models. Call admin.site.register() with User and UserAdmin as parameters.

6
Set user settings in the main project

We need to specify the login URLs and the User model to use for authentication in settings.py. At the bottom of settings.py in the blogproj/ directory, add three global variables. First add LOGIN_URL and set it to 'login'. Next, add LOGIN_REDIRECT_URL and set it to 'index'. Lastly, add AUTH_USER_MODEL with the value of 'users.User'

7
Add routes to the user app

Next, we need to setup routes for the user project. Like in the main app, weâ€™ll create a dedicated urls.py file inside of the users directory. Weâ€™re going to use LoginView.as_view() and LogoutView.as_view() to provide built-in login and logout functionality. In the newly created urls.py file, import views as auth_viewsfrom from django.contrib.auth, import path from django.urls, and import views from . (the current folder). Then copy and paste the following URL patterns at the bottom of the file:

urlpatterns = [
    path('login/', auth_views.LoginView.as_view(template_name='login.html'), name='login'),
    path('logout/', auth_views.LogoutView.as_view(next_page='index' ), name='logout'),
]
8
Redirect user related routes to the user project

In blogproj/urls.py, add path('accounts/', include('users.urls')), as the first entry in the urlpatterns array.

9
Add login/logout to site templates

In the templates/base.html template, uncomment the Login and Logout list items by removing the {% comment %} and {% endcomment %} tags inside the navbar-nav div.

10
Run initial migrations

Now that weâ€™ve added our User model we need to run migrations. From the command line, inside the root of the project, run the following commands:

python manage.py makemigrations

python manage.py migrate

Once created, add the newly created migrations to the git repo and commit them.

Note: Make sure your venv is activated with source venv/bin/activate

Note: If you made migrations before adding the user model, youâ€™ll want to remove them because it will cause errors. You can do this by deleting all files in the mainapp/migrations folder, users/migrations folder, and the db.sqlite3 file.

11
Create an admin user

Create a superuser by running the following command from the command line: python manage.py createsuperuser

At this point we can login and logout with our superuser. Letâ€™s test this out by running python manage.py runserver, then visit http://localhost:8000. Click on the Login link, then login with your superuser credentials. You can also login to the admin at http://localhost:8000/admin.

Note: This task is not testable from within PluralSight, because the user is stored in your local database.

Congratulations! You successfully implemented a custom User model with authentication.



=======================================

After I made chnages and add a model I use migrate.



C:\Users\Tibi\python-django-models-authentication>python manage.py makemigrations
Migrations for 'mainapp':
  mainapp\migrations\0003_auto_20230205_2058.py
    - Delete model BlogPost
    - Delete model Tag
Migrations for 'users':
  users\migrations\0001_initial.py
    - Create model User

C:\Users\Tibi\python-django-models-authentication>


C:\Users\Tibi\python-django-models-authentication>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, mainapp, sessions, users
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0001_initial... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying users.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying mainapp.0001_initial... OK
  Applying mainapp.0002_auto_20191004_0501... OK
  Applying mainapp.0003_auto_20230205_2058... OK
  Applying sessions.0001_initial... OK

C:\Users\Tibi\python-django-models-authentication>


C:\Users\Tibi\python-django-models-authentication>git init -b main
'git' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\Tibi\python-django-models-authentication>python manage.py createsuperuser
Username: sempedia
Email address: sempedia@gmail.com
Password:ABprog3030!
Password (again):
Superuser created successfully.

C:\Users\Tibi\python-django-models-authentication>

C:\Users\Tibi\python-django-models-authentication>python manage.py runserver
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).
February 05, 2023 - 21:22:19
Django version 2.2.9, using settings 'blogproj.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CTRL-BREAK.


visit: http://localhost:8000/blog/
Login: sempedia
ABprog3030!



Have you pushed your code to GitHub?
In order to verify your code on Pluralsight, you need to open up your computer's 
terminal at the root folder of this project and run the following commands:

git add . && git commit -m "Completed module"
git push origin master
Want to know more about GitHub?



